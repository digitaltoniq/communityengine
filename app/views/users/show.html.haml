- @meta = { :description => "#{@user}'s profile on #{AppConfig.community_name}.", :keywords => "#{@user}, #{@user.tags.join(", ") unless @user.tags.nil?}", :robots => AppConfig.robots_meta_show_content }
- @section = @user.eql?(current_user) ? 'my_profile' : 'users'
- @sidebar_left = true

.yui-b
  -box do 
    = render :partial => 'profile_user_info_sidebar', :locals => {:user => @user}

  - if @user.description
    -box :id => "about_me" do
      %h3
        =:about_me.l
      %p= @user.description

  - unless @companies.empty?
    -box :id => 'followed_companies' do
      %h3=:followed_companies.l(:user_name => h(@user), :count => @companies.size)
      - @companies.in_groups_of(4).each do |companies_group|
        %span
          - companies_group.each do |company|
            - if company
              = link_to image_tag( company.logo_photo_url(:small), :class => "polaroid" ), company_path(company)
        %br/


  -box :class => 'hentry', :id => 'profile_details' do
    %h3=:user_details.l
    .vcard.author
      %ul
        %li.update= "#{:member_since.l}#{@user.created_at.strftime(": %m/%d/%y")}"
    .clear

  -#
    DJS
    -box :class => 'alt', :id => 'friends' do
      %h3
        =:my_friends.l
        = link_to "(#{@friend_count})", accepted_user_friendships_path(@user) if @friend_count > 5
      = link_to "&raquo; #{:invite_a_friend.l :site => AppConfig.community_name}", invite_user_path(@user) if @is_current_user
      %br
      = link_to "&raquo; #{:view_all_my_friend_requests.l} (#{@pending_friendships_count})", pending_user_friendships_path(@user) if @is_current_user
      %br
      %br
      - @accepted_friendships.each do |user|
        =render :partial => "users/sidebar_user", :locals => {:user => user}
      -if @accepted_friendships.size > 4
        %h6.all
          =link_to :see_all.l, accepted_user_friendships_path(@user)

    - unless @users_comments.empty?
      -box :class => 'yui-g alt', :id => 'photo_comments' do
        %h3=:my_recent_comments.l
        - @users_comments.each do |comment|
          %dl.vcard
            %dt.photo
              - if comment.recipient
                = link_to image_tag(comment.recipient.avatar_photo_url(:small), :alt => "#{comment.recipient.login}", :width => '50', :height => '50'), commentable_url(comment)
            %dd.fn
              - if comment.commentable.eql?(comment.recipient)
                %strong= :to.l + ": #{link_to comment.recipient.login, commentable_url(comment)}"
              - else
                %br
                %strong= :on_commentable.l + ": #{link_to comment.commentable_name, commentable_url(comment)} (#{comment.commentable_type})"
            %dd
              %p= "\"#{truncate_words( comment.comment, 10, '...')}\""


    - unless @photo_comments.empty?
      -box :class => 'yui-g alt', :id => 'photo_comments' do
        %h3=:photo_comments.l
        - @photo_comments.each do |comment|
          %dl.vcard
            %dt.photo
              = link_to(image_tag(comment.commentable.public_filename(:small), :width => '50', :height => '50'), user_photo_path(@user, comment.commentable))
            %dd.fn= "#{comment.username}" + " " + :says.l + ":"
            %dd
              = truncate_words(comment.comment, 10)
              %br
              = link_to "&raquo; " + :view_comment.l, user_photo_path(@user, comment.commentable) + "#comment_#{comment.id}"

#yui-main
  .yui-b

    - unless @recent_posts_in_followed_companies.empty?
      -box :id => "posts" do
        %h3=:recent_posts_in_followed_companies.l(:user_name => h(@user))
        = render :partial => 'posts/post', :collection => @recent_posts_in_followed_companies
        
    - unless @recent_comments.empty?
      -box :id => "comments" do
        %h3=:recent_user_comments.l(:user_name => h(@user))
        = render :partial => 'comments/comment', :collection => @recent_comments

    -#
      DJS
      - if @photos.empty? and @recent_posts.empty?
        -box :class => "alt first_alt" do
          %h3= :small_profile.l :user => @user

      - unless @photos.empty?
        -box :id => "photos" do
          %h3=:photos.l
          - @photos.each do |photo|
            = link_to image_tag( photo.public_filename(:small), :class => "polaroid"), user_photo_path(@user, photo)

          %h6.all.right= link_to :view_all_my_photos.l, user_photos_path(@user)
          = "#{link_to(:add_a_photo.l, new_user_photo_path(@user))}" if @is_current_user

    -# unless @companies.empty?
      -box :id => "companies" do
        %h3=:followed_companies.l(:user_name => display_name(@user), :count => @companies.size)
        - @companies.in_groups_of(3).each do |companies_group|
          %span
            - companies_group.each do |company|
              - if company
                = link_to image_tag( company.logo_photo_url(:small), :class => "polaroid" ), company_path(company)
          %br/

    -#
      DJS
      -box :class => 'hfeed comments', :id => 'comments' do
        %h3=:profile_comments.l
        %h2=:add_your_comment.l
        %p= render :partial => 'comments/comment_form', :locals => {:commentable => @user}
        %a#newest_comment
        = render :partial => 'comments/comment', :collection => @comments
        %span#more_comments_links= more_user_comments_links
