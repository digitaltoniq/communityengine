.yui-b
  -box :id => 'category_tips' do
    -if @post.contest
      = render :partial => "contest"
    -elsif @post.category
      = render :partial => "/categories/tips", :locals => {:category => @post.category}
    - else 
      = render :partial => "/categories/tips", :locals => {:category => nil}

  -box :id => 'feature_image', :class => "alt" do
    = render :partial => 'posts/feature_image', :locals => { :feature_image => @post.feature_image }
    -#%a.button.positive{:href => '#', :onclick => "tinyMCE.execCommand('mceCurblyAdvImage');return false;"}="Upload an image for your post".l
    
#yui-main
  .yui-b
    -box do 
      %h3
        =@post.category ? (:new_post_for_category.l :category => @post.category.name) : :new_post.l

      = error_messages_for :post
      - form_for(:post, :url => company_posts_path(@company), :html => {:class => "MainForm", :id => 'post_form'}) do |f|			

        = f.hidden_field :feature_image_id

        %label
          = :select_post_author.l
          = f.select :user_id, company_authors_select
        %label
          =:title.l
          %em="(#{:required.l})"
        = f.text_field :title

        %label
          =:body_text.l
          %em="(#{:required.l})"
        = f.text_area :raw_post, :style => "width:95%;"

        -#
          DJS
          %label
            =:tags.l
            %em="(#{:optional_keywords_describing_this_post_separated_by_commas.l})"
          = text_field_tag 'tag_list', @post.tag_list, {:autocomplete => "off", :size => 35}
          .auto_complete#tag_list_auto_complete
            = auto_complete_field 'tag_list', {:url => { :controller => "tags", :action => 'auto_complete_for_tag_name'}, :tokens => [','] }

        -#
          DJS
          %label
            %a{:href=> "#", :onclick => "$('poll-ui').toggle(); return false;"}
              = "#{image_tag 'icons/poll.png', :plugin => 'community_engine' } " + :add_a_poll.l
            %em=:optional.l
          #poll-ui{:style => 'display:none'}=render :partial => 'polls/new'

        %label
          =:save_post_as.l
        = f.select(:published_as, [[:published.l, 'live'], [:draft.l, 'draft']])
        
        %p
          = submit_tag :save.l
        %p
          =:or.l 
          = link_to :cancel.l, manage_company_posts_path(@company)

  = observe_field  "post_category_id", {:url => {:controller => 'categories', :action => 'show_tips'}, :with => "id", :update => "category_tips", :complete => visual_effect(:highlight, "category_tips", :duration => 0.5)}
