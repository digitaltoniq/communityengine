%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/util.js"}
%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/basic.js"}
%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/abc_launcher.js"}

- @section = (@post.category && @post.category.name)
- @meta = { :title => "#{@post.title}", :description => "#{truncate_words(@post.post, 75, '...' )}", :keywords => "#{@post.tags.join(", ") unless @post.tags.nil?}", :robots => AppConfig.robots_meta_show_content }

#yui-main
  .yui-b
    -box :class => 'hfeed' do  
      %h3=:users_blog.l :user=>  h(@user)
      .hentry.main
        %h4.entry-title= link_to @post.title, post_path(@post), :rel => 'bookmark'
        .vcard.author
          = image_tag(@post.photo(:medium))
          %ul
            %li.update
              %a{"href"=>"#{post_path(@post)}", "rel"=>"bookmark"}
                %abbr.published{"title"=>"#{@post.published_at}"}= @post.published_at_display("%B %d, %Y")
            %li.view= :views.l+" (#{@post.view_count})"
            %li.comments= link_to :comments.l+" (#{@post.comments.size})", post_path(@post)+'#comments'
            =render :partial => 'followings/follow_link', :locals => {:followee => @post}
            
            -#
              DJS
              - if current_user and current_user.can_request_friendship_with(@post.user)
                %li.addfriend= add_friend_link(@post.user)
              %li.print
                %a{"href"=>"#", :onclick=>"window.print(); return false;", :title=>:print_this_story.l}= :print.l
              %li.email
                %a{:href=>"#", :onclick=>"showSendTo_friend(); return false;", :title=>:email_this_story_to_friends.l}= :email_to_friends.l
              %li.share
                %script{:type=>"text/javascript", :src=>"http://w.sharethis.com/widget/?tabs=web&amp;charset=utf-8&amp;style=default&amp;publisher=4488bdef-d776-4c80-93e1-ac1fb8359971&amp;linkfg=%23131358&amp;button=false"}
                =sharethis_options(@post)
              -if @is_current_user || admin? || moderator?
                %li.edit= link_to :edit.l, edit_user_post_path(@post.user, @post)
                %li.delete= link_to :delete.l, user_post_path(@post.user, @post), {:method => :delete, :confirm => :permanently_delete_this_post.l}

              
          %script{:type => 'text/javascript'}
            :plain
              function showSendTo_friend(){
                if ($('send_to_friend')){
                  new Lightbox.base('send_to_friend');				                
                } else {
            = remote_function(:url => { :action => "send_to_friend", :params => {:user_id => @user.id, :id => @post.id} }, :success => "new Insertion.Top($('bd'), request.responseText)", :complete => "new Lightbox.base('send_to_friend'); return false;Element.toggle('send_to_friend');", :method => 'post')                 
            :plain
              }}
              
        / vcard
        .entry-content
          = @post.post
          = render :partial => 'polls/poll_ui', :locals => {:poll => @post.polls.first} unless @post.polls.empty?
          - unless @post.tags.empty?
            %ul.tags
              - @post.tags.each do |t|
                %li=link_to( t.name, tag_url(t), :rel => 'tag')
        / entry-content
      / ends hentry
    -box :class => 'hfeed comments', :id => 'comments' do      
      %h3= :post_comments.l 
      %h2= :add_your_comment.l
      %p= render :partial => 'comments/comment_form', :locals => {:commentable => @post}
      %a#newest_comment
      = render :partial => 'comments/comment', :collection => @comments
      %span#more_comments_links= more_comments_links(@post)
    / ends box
  / yui-b
/ ends yui-main

.yui-b

  = render :partial => 'author_profile', :locals => {:user => @user}

  - participating_representatives = Representative.participating_in(@post)
  - unless participating_representatives.empty?
    -box :class => 'alt' do
      %h3=:participating_representatives.l(:count => participating_representatives.size)
      %ul.list.user
        - participating_representatives.each do |representative|
          %li
            = link_to image_tag(representative.avatar_photo_url(:small), :alt => "#{h(representative)}"), representative_path(representative), :rel => 'bookmark', :class => 'photo', :title => "#{h(representative)}'s profile"
            = link_to h(representative), representative_path(representative), :class => 'url'
/ sidebar

%script{:type=>"text/javascript", :charset=>"utf-8"}
  = remote_function :url => {:controller => 'posts', :action => 'update_views', :user_id => @post.user, :id => @post}, :method => :put
